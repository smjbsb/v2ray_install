#!/bin/bash

# 获取服务器外网 IP
get_server_ip() {
    server_ip=$(curl -s ifconfig.me)
}

# Base64编码函数
base64_encode() {
    echo -n "$1" | base64 -w 0
}

# 生成VMess配置链接
generate_vmess_link() {
    # 获取服务器的外网 IP
    local server_ip
    server_ip=$(curl -s ifconfig.me)

    # 从配置文件中获取相关参数
    local uuid
    uuid=$(jq -r '.inbounds[] | select(.protocol=="vmess") | .settings.clients[0].id' /usr/local/etc/v2ray/config.json)

    local port
    port=$(jq -r '.inbounds[] | select(.protocol=="vmess") | .port' /usr/local/etc/v2ray/config.json)

    local path
    path=$(jq -r '.inbounds[] | select(.protocol=="vmess") | .streamSettings.wsSettings.path' /usr/local/etc/v2ray/config.json)

    # 构建 VMess JSON
    local vmess_json
    vmess_json=$(cat <<EOF
{
  "v": "2",
  "ps": "V2Ray Server",
  "add": "$server_ip",
  "port": "$port",
  "id": "$uuid",
  "aid": "0",
  "net": "ws",
  "type": "none",
  "host": "",
  "path": "$path",
  "tls": "none"
}
EOF
)

    # Base64 编码并输出 VMess 链接
    local vmess_base64
    vmess_base64=$(base64_encode "$vmess_json")
    local vmess_link
    vmess_link="vmess://$vmess_base64"
    echo "$vmess_link"
}

# 生成Shadowsocks配置链接
generate_ss_link() {
    # 提取Shadowsocks相关配置
    ss_port=$(jq -r '.inbounds[] | select(.protocol=="shadowsocks") | .port' /usr/local/etc/v2ray/config.json)
    ss_password=$(jq -r '.inbounds[] | select(.protocol=="shadowsocks") | .settings.password' /usr/local/etc/v2ray/config.json)
    ss_method=$(jq -r '.inbounds[] | select(.protocol=="shadowsocks") | .settings.method' /usr/local/etc/v2ray/config.json)

    # Base64编码"加密方式:密码"
    ss_base64=$(echo -n "$ss_method:$ss_password" | base64 -w 0)

    # 构建Shadowsocks链接
    ss_link="ss://$ss_base64@$server_ip:$ss_port#ShadowSocks"
    echo "$ss_link"
}

# 主流程控制
if [ "$1" == "vmess" ]; then
    get_server_ip
    generate_vmess_link
elif [ "$1" == "ss" ]; then
    get_server_ip
    generate_ss_link
else
    echo "Usage: $0 [vmess|ss]"
fi
